@page "/"

@using SkiaSharp.Views.Blazor
@using MudBlazor
@using Primal.Client.Services
@using BlazorPanzoom

@inject IJSRuntime JSRuntime
@inject ThemeService ThemeService
@implements IDisposable

<PageTitle>Prime Spiral Explorer</PageTitle>

<MudContainer Style="height: 100%;">
    <style type="text/css">
        html, body {
            margin: 0 auto;
            height: 100%;
            max-width: none;
            overflow: hidden;
        }

        .mud-container {
            padding: 0;
        }

        canvas {
            width: 100%;
            height: 100%;
        }

        #app {
            height: 100%;
        }

        .mud-container {
            padding: 0;
            position: relative;
        }

        .debug-overlay {
            position: absolute;
            top: 10px;
            left: 10px;
            color: white;
            background-color: rgba(0, 0, 0, 0.5);
            padding: 5px;
            border-radius: 5px;
            z-index: 10;
        }
    </style>
    @*
    @if (_isLoading)
    {
    <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
    } *@

    <ProgressIndicator Hidden="@(!_isLoading)" Progress="@SpiralGenerationPercentComplete"></ProgressIndicator>
    
  @*   <div class="panzoom-parent">
        <Panzoom @ref="_panzoom" WheelMode="WheelMode.ZoomWithWheel">
            <div @ref="@context.ElementReference" class="panzoom"> *@
                <SKCanvasView id="canvasElementId"
                              Hidden="@(_isLoading)"
                              @ref="_drawingCanvas"
                              @onmousewheel="OnMouseWheel"
                              @onmousedown="OnMouseDown"
                              @onmousemove="OnMouseMove"
                              @ontouchstart="OnTouchStart"
                              @ontouchmove="OnTouchMove"
                              IgnorePixelScaling="true"
                              OnPaintSurface="DrawNextCanvasFrame" />
@*             </div>
        </Panzoom>
    </div> *@

    @if (_isDebugModeEnabled)
    {
        <div class="debug-overlay">@_debugText</div>
    }

    <MudDrawer @bind-Open="@ToolsOpen" Anchor="Anchor.Right" Elevation="0" Variant="@DrawerVariant.Persistent" ClipMode="DrawerClipMode.Always">
        <MudDrawerHeader Style="padding-bottom: 0; min-height: unset;">
            <MudText Typo="Typo.h6">Tools</MudText>
        </MudDrawerHeader>

        <MudList Style="padding-top: 0;">
            <MudListItem Style="padding-top: 0;">
                <MudTextField  Label="Max Prime" @bind-Value="_maxPrimeInput" />
            </MudListItem>

            <MudListItem>
                <MudGrid Justify="Justify.SpaceEvenly" Style="align-items: center;">
                    <MudItem xs="6" Style="display: flex; justify-content: center; padding: 0">
                        <MudButton Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Square" OnClick="ReGenerate">Generate</MudButton>
                    </MudItem>
                    <MudItem xs="6" Style="display: flex; justify-content: center; padding: 0">
                        <MudButton Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Save" OnClick="SaveImage" >Save</MudButton>
                    </MudItem>
                </MudGrid>
            </MudListItem>

            <MudListItem>
                <MudText>Composites</MudText>
                <MudColorPicker Style="@($"background-color:{_compositeBackgroundColor.Value}; margin-top: 0; display: flex; justify-content: center;")"
                                IconSize="MudBlazor.Size.Small"
                                Value="_compositeBackgroundColor"
                                ValueChanged="@(newColor => UpdateBackgroundColor(newColor.Value))"/>
            </MudListItem>

            <MudListItem>
                <MudGrid Justify="Justify.SpaceEvenly" Style="align-items: center;">
                    <MudItem xs="9" Style="text-align: start; padding-top: 0; padding-bottom: 0">
                        <MudText>Show Primes</MudText>
                    </MudItem>
                    <MudItem xs="3" Style="display: flex; justify-content: center; padding-top: 0; padding-bottom: 0">
                        <MudCheckBox @bind-Checked="ShowPrimesEnabled" Color="Color.Primary" UnCheckedColor="Color.Secondary"/>
                    </MudItem>
                </MudGrid>
                <MudColorPicker Style="@($"background-color:{_primeColor.Value}; margin-top: 0; display: flex; justify-content: center;")"
                                IconSize="MudBlazor.Size.Small"
                                Value="_primeColor"
                                ValueChanged="@(newColor => UpdatePrimeColor(newColor.Value))"/>
            </MudListItem>

            <MudListItem>
                <MudGrid Justify="Justify.SpaceEvenly" Style="align-items: center;">
                    <MudItem xs="9" Style="text-align: start; padding-top: 0; padding-bottom: 0">
                        <MudText>Show Spiral</MudText>
                    </MudItem>
                    <MudItem xs="3" Style="display: flex; justify-content: center; padding-top: 0; padding-bottom: 0">
                        <MudCheckBox @bind-Checked="ShowSpiralLineEnabled" Color="Color.Primary" UnCheckedColor="Color.Secondary"/>
                    </MudItem>
                </MudGrid>
                <MudColorPicker Style="@($"background-color:{_spiralLineColor.Value}; margin-top: 0; display: flex; justify-content: center;")"
                                IconSize="MudBlazor.Size.Small"
                                Value="_spiralLineColor"
                                ValueChanged="@(newColor => UpdateSpiralLineColor(newColor.Value))"/>
            </MudListItem>

            <MudListItem>
                <MudGrid Justify="Justify.SpaceEvenly" Style="align-items: center;">
                    <MudItem xs="9" Style="text-align: start; padding-top: 0; padding-bottom: 0">
                        <MudText>Show Lattice</MudText>
                    </MudItem>
                    <MudItem xs="3" Style="display: flex; justify-content: center; padding-top: 0; padding-bottom: 0">
                        <MudCheckBox @bind-Checked="ShowSquareLatticeEnabled" Color="Color.Primary" UnCheckedColor="Color.Secondary"/>
                    </MudItem>
                </MudGrid>
                <MudColorPicker Style="@($"background-color:{_gridLinesColor.Value}; margin-top: 0; display: flex; justify-content: center;")"
                                IconSize="MudBlazor.Size.Small"
                                Value="_gridLinesColor"
                                ValueChanged="@(newColor => UpdateGridLinesColor(newColor.Value))"/>
            </MudListItem>

            <MudListItem>
                <MudGrid Justify="Justify.SpaceEvenly" Style="align-items: center;">
                    <MudItem xs="9" Style="text-align: start; padding-top: 0; padding-bottom: 0">
                        <MudText>Show Text</MudText>
                    </MudItem>
                    <MudItem xs="3" Style="display: flex; justify-content: center; padding-top: 0; padding-bottom: 0">
                        <MudCheckBox @bind-Checked="ShowTextLabelsEnabled" Color="Color.Primary" UnCheckedColor="Color.Secondary"/>
                    </MudItem>
                </MudGrid>
                <MudColorPicker Style="@($"background-color:{_numbersTextColor.Value}; margin-top: 0; display: flex; justify-content: center;")"
                                IconSize="MudBlazor.Size.Small"
                                Value="_numbersTextColor"
                                ValueChanged="@(newColor => UpdateNumbersTextColor(newColor.Value))"/>
            </MudListItem>
            <MudIconButton Color="Color.Inherit" Icon="@Icons.Material.Filled.BugReport" OnClick="ToggleDebug"/>
        </MudList>
    </MudDrawer>

    <MudDialog @ref="SaveDialog">
        <TitleContent>Exported Image Link</TitleContent>
        <DialogContent>
            <a href="@ImageDownloadBlobLocation" download="@DownloadFileName">Download Image</a>
        </DialogContent>
        <DialogActions>
            <MudButton Color="Color.Primary" OnClick="CloseDialog">Ok</MudButton>
        </DialogActions>
    </MudDialog>
</MudContainer>